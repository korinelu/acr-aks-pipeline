trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'acr-connection'   # ACR service connection name
  imageRepository: 'myazureproject'
  containerRegistry: 'zureacrt14.azurecr.io'
  dockerfilePath: 'app/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'azureacrt144967-auth'
  vmImageName: 'ubuntu-22.04'

stages:
- stage: Build
  displayName: Build and Push Docker Image
  jobs:
  - job: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push image to ACR
      inputs:
        command: buildAndPush
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        tags: |
          $(tag)

    - publish: $(Build.SourcesDirectory)/manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  jobs:
  - deployment: Deploy
    environment: 'acr-aks-pipeline.default'
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to AKS
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/_manifests/deployment.yml
                $(Pipeline.Workspace)/_manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
